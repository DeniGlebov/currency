version: "3.3"

services:
  memcached:
    env_file: .env
    image: memcached:latest
    hostname: ${MEMCACHED_HOST}
    container_name: memcached
    restart: always
    depends_on:
      - postgres

  rabbitmq:
    env_file: .env
    image: rabbitmq:3.8-rc-management
    hostname: ${RABBITMQ_DEFAULT_HOST}
    container_name: rabbitmq
    restart: always
    depends_on:
      - postgres

  backend:
    env_file: .env
    build: .
    container_name: backend
    hostname: ${BACKEND_HOST}
    command: ./commands/wsgi/${SERVER}.sh
    restart: always
    depends_on:
      - memcached
      - rabbitmq
      - postgres
    ports:
      - "8000:8000"
      - "8001:8001"
    volumes:
      - ./:/srv/project

  celery:
    env_file: .env
    build: .
    container_name: celery
    hostname: ${CELERY_HOST}
    command: ./commands/celery/start_celery.sh
    restart: always
    depends_on:
      - postgres
      - rabbitmq
    volumes:
      - ./:/srv/project

  celerybeat:
    env_file: .env
    build: .
    container_name: celerybeat
    hostname: ${CELERYBEAT_HOST}
    command: ./commands/celery/start_celerybeat.sh
    restart: always
    depends_on:
      - postgres
      - rabbitmq
      - celery
    volumes:
      - ./:/srv/project

  postgres:
    env_file: .env
    image: postgres:12.3-alpine
    container_name: postgres
    hostname: ${POSTGRES_HOST}
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data

  nginx:
    env_file: .env
    image: nginx:1.17.4-alpine
    container_name: nginx
    hostname: ${NGINX_HOST}
    volumes:
      - ./nginx/:/etc/nginx/conf.d/
      - ./static_content:/etc/nginx/static_content/
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend

  portainer:
    env_file: .env
    image: portainer/portainer:latest
    container_name: portainer
    hostname: portainer
    ports:
      - "9000:9000"
    command: --admin-password='${PORTAINER_HASH_PASSWORD}'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - memcached
      - rabbitmq
      - nginx
      - postgres
      - celery
      - backend
      - celerybeat
      - flower

  flower:
    env_file: .env
    build: .
    container_name: flower
    hostname: ${FLOWER_HOST}
    command: flower --broker=amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@${RABBITMQ_DEFAULT_HOST}:5672/ --port=5555
    restart: always
    depends_on:
      - rabbitmq
      - celery
      - celerybeat
    ports:
      - 5555:5555
    volumes:
      - ./:/srv/project

volumes:
  db_data: {}